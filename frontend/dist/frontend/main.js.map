{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert/alert.component.ts","./src/app/_components/alert/alert.component.html","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/alert.model.ts","./src/app/_services/alert.service.ts","./src/app/_services/authentication.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-layout/auth-layout.module.ts","./src/app/auth-layout/auth-routing.module.ts","./src/app/auth-layout/layout/layout.component.ts","./src/app/auth-layout/layout/layout.component.html","./src/app/auth-layout/login/login.component.ts","./src/app/auth-layout/login/login.component.html","./src/app/auth-layout/register/register.component.ts","./src/app/auth-layout/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/user-profile/layout/layout.component.ts","./src/app/user-profile/layout/layout.component.html","./src/app/user-profile/list/list.component.ts","./src/app/user-profile/list/list.component.html","./src/app/user-profile/user-profile.module.ts","./src/app/user-profile/user-routing.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../../_services/alert.service';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Alert, AlertType } from '../../_models/alert.model';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) return;\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) return;\n\n    const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    }\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}","<!-- <div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div> -->\n\n<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.authenticationService.userValue;\n        if (user) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['auth/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                // location.reload(true);\n            }\n\n            let error = \"\";\n\n            if (err.error.errors) {\n                err.error.errors.forEach(element => {\n                    error += \" \" + element.msg;\n                });;\n                return throwError(error);\n            }\n            error = (err && err.error && err.message) || err.statusText;\n\n            return throwError(error);\n\n\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // // add authorization header with jwt token if available\n        // const user = this.authenticationService.userValue;\n        // const isLoggedIn = user;\n        // const isApiUrl = request.url.startsWith(environment.API_URL);\n        // // if (isLoggedIn && isApiUrl) {\n\n        request = request.clone({\n            withCredentials: true\n        });\n\n\n        return next.handle(request);\n    }\n}","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?: Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Alert, AlertType } from '../_models/alert.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private defaultId = 'default-alert';\n\n  // enable subscribing to alerts observable\n  onAlert(id = this.defaultId): Observable<Alert> {\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n  }\n\n  // convenience methods\n  success(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n  }\n\n  error(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n  }\n\n  info(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n  }\n\n  warn(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n  }\n\n  // main alert method    \n  alert(alert: Alert) {\n    alert.id = alert.id || this.defaultId;\n    this.subject.next(alert);\n  }\n\n  // clear alerts\n  clear(id = this.defaultId) {\n    this.subject.next(new Alert({ id }));\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { User } from '../_models/user.model';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private userSubject: BehaviorSubject<User>;\n  public user: Observable<User>;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n    this.user = this.userSubject.asObservable();\n  }\n\n  public get userValue(): User {\n    return this.userSubject.value;\n  }\n\n  login(email: string, password: string) {\n    return this.http.post<any>(environment.API_URL + `/login/`, { email, password })\n      .pipe(map(user => {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n\n    return this.http.get(`${environment.API_URL}/logout/`).subscribe(() => {\n\n      localStorage.removeItem('user');\n\n      this.userSubject.next(null);\n\n      this.router.navigate(['/']);\n    }\n    );\n\n\n  }\n\n\n  register(user) {\n    return this.http.post<any>(`${environment.API_URL}/register/`, user).pipe(map(user => {\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n      console.log(user)\n\n      return user;\n    }));\n  }\n\n  // getUserInfo() {\n  //   return this.http.get<any>(`${environment.API_URL}/userinfo/`);\n  // }\n\n  updateUserInfo(params) {\n    return this.http.put<any>(`${environment.API_URL}/userinfo/`, params)\n      .pipe(map(x => {\n\n        // update local storage\n        localStorage.setItem('user', JSON.stringify(x));\n        // publish updated user to subscribers\n        this.userSubject.next(x);\n\n        return x;\n      }));\n\n  }\n\n  friendlist(params) {\n    return this.http.put<any>(`${environment.API_URL}/friend/`, params)\n      .pipe(map(x => {\n\n        // update local storage\n        localStorage.setItem('user', JSON.stringify(x));\n        // publish updated user to subscribers\n        this.userSubject.next(x);\n\n        return x;\n      }));\n\n  }\n\n\n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Welcome to the world of pangolins</h2>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './_helpers/auth.guard';\nimport { AboutComponent } from \"./about/about.component\";\n\n\nconst authLayoutModule = () => import('./auth-layout/auth-layout.module').then(x => x.AuthLayoutModule);\nconst userProfileModule = () => import('./user-profile/user-profile.module').then(x => x.UserProfileModule);\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'user-profile', loadChildren: userProfileModule, canActivate: [AuthGuard] },\n  { path: 'auth', loadChildren: authLayoutModule },\n  { path: 'about', component: AboutComponent },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services/authentication.service';\nimport { User } from './_models/user.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  currentUser: User;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.user.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/user-profile\" routerLinkActive=\"active\">User Profile</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/about\">About</a> -->\n    <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': currentUser }\">\n  <app-alert></app-alert>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AlertComponent } from './_components/alert/alert.component';\n\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport { AuthLayoutModule } from './auth-layout/auth-layout.module';\nimport { UserProfileModule } from './user-profile/user-profile.module';\nimport { AboutComponent } from './about/about.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AlertComponent,\n    AboutComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AuthLayoutModule,\n    UserProfileModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthRoutingModule } from '.././auth-layout/auth-routing.module';\n\n\n\n@NgModule({\n  declarations: [LayoutComponent, LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthLayoutModule { }\n","import { NgModule } from '@angular/core';\nimport { LayoutComponent } from '././layout/layout.component';\nimport { LoginComponent } from '././login/login.component';\nimport { RegisterComponent } from '././register/register.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: LayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent }\n    ]\n  }\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService\n  ) {\n    // redirect to home if already logged in\n    if (this.authService.userValue) {\n      this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-md-6 offset-md-3 mt-5\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../_services/authentication.service';\nimport { AlertService } from '../../_services/alert.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService,\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.userValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n\n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../_services/authentication.service';\nimport { AlertService } from '../../_services/alert.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    if (this.authenticationService.userValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]]\n    });\n  }\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n          this.router.navigate(['../login'], { relativeTo: this.route });\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n\n\n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Register</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n\n            <div class=\"form-group\">\n                <label for=\"username\">Email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8 characters</div>\n                    <div *ngIf=\"f.password.errors.maxlength\">Password cannot exceed 16 characters</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { User } from '../_models/user.model';\nimport { AuthenticationService } from '../_services/authentication.service';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  user: User;\n\n  constructor(private authenticationService: AuthenticationService) {\n    this.user = this.authenticationService.userValue;\n  }\n\n\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <h3> Le monde de pangolins!!! </h3>\n        <div *ngIf=\"user\">\n            <h1>Hi {{user.email}}!</h1>\n            <p>You're logged in in Angular !!!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../_services/authentication.service';\nimport { User } from 'src/app/_models/user.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AlertService } from '../../_services/alert.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\nexport class ListComponent implements OnInit {\n  form: FormGroup;\n  amiform: FormGroup;\n\n  loading = false;\n  aloading = false;\n  rloading = false;\n  submitted = false;\n  asubmitted = false;\n  user: User;;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n\n  ) {\n\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n\n      age: ['', Validators.pattern(\"^[0-9]*$\")],\n      famille: [''],\n      race: [''],\n      nourriture: ['']\n\n    });\n\n    this.amiform = this.formBuilder.group({\n\n      email: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n\n    });\n\n    if (this.user) {\n      this.f.age.setValue(this.user.age);\n      this.f.famille.setValue(this.user.famille);\n      this.f.nourriture.setValue(this.user.nourriture);\n      this.f.race.setValue(this.user.race);\n\n    }\n\n\n\n  }\n  get f() { return this.form.controls; }\n  get f2() { return this.amiform.controls; }\n\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.updateUser();\n\n  }\n  friend(event) {\n    this.asubmitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.amiform.invalid) {\n      return;\n    }\n\n    this.aloading = true;\n\n\n    this.updateFriend(event);\n\n  }\n\n\n  private updateUser() {\n\n    this.authService.updateUserInfo(this.form.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.loading = false;\n\n          this.alertService.success('Update successful', { keepAfterRouteChange: true });\n          this.router.navigate(['..', { relativeTo: this.route }]);\n          this.user = JSON.parse(localStorage.getItem('user'));\n\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n\n        });\n  }\n\n  private updateFriend(event) {\n    let op = \"\"\n    if (event.submitter.name == \"add\") {\n      op = \"add\";\n    }\n    else if (event.submitter.name == \"delete\") {\n      op = \"delete\";\n    }\n    this.amiform.value[\"op\"] = op;\n\n    this.authService.friendlist(this.amiform.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.aloading = false;\n          this.alertService.success(op + ' friend successful', { keepAfterRouteChange: true });\n          this.router.navigate(['..', { relativeTo: this.route }]);\n          this.user = JSON.parse(localStorage.getItem('user'));\n\n        },\n        error => {\n          this.alertService.error(error);\n\n          this.aloading = false;\n        });\n  }\n\n}\n","<h1>Profile</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"age\">Age</label>\n            <input type=\"text\" formControlName=\"age\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': submitted && f.age.errors }\" />\n            <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.age.errors?.pattern\">age need to be a number</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"famille\">famille</label>\n            <input type=\"text\" formControlName=\"famille\" class=\"form-control\" />\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"race\">race</label>\n            <input type=\"text\" formControlName=\"race\" class=\"form-control\" />\n\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"nourriture\">nourriture</label>\n            <input type=\"text\" formControlName=\"nourriture\" class=\"form-control\" />\n\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n\n    </div>\n</form>\n\n<form [formGroup]=\"amiform\" (ngSubmit)=\"friend($event)\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"email\">Add/remove friend by email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': asubmitted && f2.email.errors }\" />\n            <div *ngIf=\"asubmitted && f2.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f2.email.errors?.required\">email required</div>\n            </div>\n            <div *ngIf=\"asubmitted && f2.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f2.email.errors?.pattern\">invalid email</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n\n        <button [disabled]=\"aloading\" class=\"btn btn-primary\" name=\"add\">\n            <span *ngIf=\"aloading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Add\n        </button>\n\n        <button [disabled]=\"rloading\" class=\"btn btn-light\" name=\"delete\">\n            <span *ngIf=\"rloading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            remove\n        </button>\n\n\n    </div>\n</form>\n\n<div>\n    <h2>Liste d'amis</h2>\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n\n                <th>Email</th>\n\n            </tr>\n        </thead>\n        <tbody *ngIf=\"user\">\n            <tr *ngFor=\"let friend of user.friends\">\n\n                <td>{{friend.email}}</td>\n\n            </tr>\n\n        </tbody>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout/layout.component';\nimport { ListComponent } from './list/list.component';\nimport { UserRoutingModule } from './user-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [LayoutComponent, ListComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UserRoutingModule,\n  ]\n})\nexport class UserProfileModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from '././layout/layout.component';\nimport { ListComponent } from '././list/list.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '', component: LayoutComponent,\n    children: [\n      { path: '', component: ListComponent },\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://localhost:4000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}